TryhackMe Subdomain enum


import requests 
import sys 

sub_list = open("wordlist2.txt").read()
subdoms = sub_list.splitlines()

for sub in subdoms:
    sub_domains = f"http://{sub}.{sys.argv[1]}"

    try:
        requests.get(sub_domains)
    except requests.ConnectionError:
        pass
    else:
        print("Valid domain: ",sub_domains)


-------------
Improved Code


import requests
import sys
import concurrent.futures

session = requests.Session()                                                # Create a Session object

def check_sub_domain(sub):
    sub = sub.strip()                                                       # Remove leading and trailing whitespace
    sub_domains = f"http://{sub}.{sys.argv[1]}"
    try:
        response = session.get(sub_domains, timeout=0.5)                    # Use the timeout parameter to set a time limit for the request
    except requests.ConnectionError:
        pass
    else:
        print("Valid domain: ", sub_domains)

with open("wordlist2.txt") as file:                                         # Open the file and read the lines
    sub_list = file.readlines()

with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:     # Use ThreadPoolExecutor to perform requests in parallel
    futures = []
    for sub in sub_list:
        futures.append(executor.submit(check_sub_domain, sub))
    concurrent.futures.wait(futures)
